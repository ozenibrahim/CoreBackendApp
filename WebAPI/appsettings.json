{
  //"IpRateLimiting": {
  //  "EnableEndpointRateLimiting": true, //rate limit uygulamak için true set ediyoruz.
  //  "StackBlockedRequests": false, /* Varsayalım ki; uygulamanıza dakikada 60, saatte ise 1000 adet request gelebileceğini belirttiniz. Dakika içerisinde 60’ın üzerinde gelen requestlerin geçerli olup olmamasını işte bu ‘StackBlockedRequests’ özelliğiyle belirliyorsunuz. ‘true’ değerini verirseniz dakika sınırını aşan tüm requestler saat sınırında düşülecek aksi taktirde(false) dakika ve saat kendi sınırlarında değerlendirilecektir.*/
  //  "HttpStatusCode": 429, // Rate limit hatası için durum kodu
  //  "IpWhitelist": [ "127.0.0.12" ], // Rate limitten muaf tutulacak IP adreslerini belirtiyoruz.
  //  "EndpointWhitelist": [ "*:/api/customers" ], // Rate limitten muaf tutulacak endpointleri belirtiyoruz.
  //  "GeneralRules": [
  //    {
  //      "Endpoint": "*", // rate limit uygulanacak endpointi ifade etmektedir * Tüm endpointlere karşılık gelmektedir.
  //      "Period": "1s",
  //      "Limit": 2
  //    },
  //    {
  //      "Endpoint": "*:/api/products", // /api/products endpointindeki herhangi bir HTTP türünden actiona karşılık gelmektedir. (*:/api/products/* İlgili endpointteki tüm actionlara karşılık gelmektedir.)
  //      "Period": "10s", // s-> saniye m-> dakika h-> saat (belirtilen rate limitin ne kadar süreliğine geçerli olduğunu tutmaktadır.)
  //      "Limit": 5 // rate limit değeridir.
  //    }
  //  ],
  //  "QuotaExceededResponse": {
  //    "Content": "{{ \"message\": \"istek limiti asilmistir.\", \"details\": \"kota asildi. {1} basina {0} istek yapabilirsiniz. lutfen {2} saniye icerisinde tekrar deneyiniz.\" }}",
  //    "ContentType": "application/json",
  //    "StatusCode": 429
  //  }
  //},
  //"IpRateLimitPolicies": {
  //  "IpRules": [ /* ‘192.168.24.25’ IP değerine sahip olan clientı ele alırsak eğer biri ‘prodocuts’ bir diğeri de ’employees’ olmak üzere iki endpointe’de istek geldiğinde sırasıyla ’55’ saniyede ’21’ istek, ’21’ saatte ise ‘100000’ istek yapabilecek bir hacme sahip olacağı belirtilmiştir. */
  //    {
  //      "Ip": "::1",
  //      "Rules": [
  //        {
  //          "Endpoint": "*",
  //          "Period": "10m",
  //          "Limit": 1500
  //        }
  //      ]
  //    },
  //    {
  //      "Ip": "192.168.24.25",
  //      "Rules": [
  //        {
  //          "Endpoint": "*:/api/products",
  //          "Period": "55s",
  //          "Limit": 21
  //        },
  //        {
  //          "Endpoint": "Get:/api/category",
  //          "Period": "21h",
  //          "Limit": 100000
  //        }
  //      ]
  //    }
  //  ]
  //},
  "ClientRateLimiting": {
    "EnableEndpointRateLimiting": true,
    "StackBlockedRequests": false,
    "HttpStatusCode": 429,
    "IpWhitelist": [ "127.0.0.12" ],
    "EndpointWhitelist": [ "*:/api/products/*" ],
    "ClientIdHeader": "x-clientId",
    "ClientWhiteList": [ "client-1" ],
    "GeneralRules": [
      {
        "Endpoint": "*",
        "Period": "3s",
        "Limit": 2
      },
      {
        "Endpoint": "*:api/category/*",
        "Period": "10s",
        "Limit": 5
      }
    ],
    "QuotaExceededResponse": {
      "Content": "{{ \"message\": \"istek limiti asilmistir.\", \"details\": \"kota asildi. {1} basina {0} istek yapabilirsiniz. lutfen {2} saniye icerisinde tekrar deneyiniz.\" }}",
      "ContentType": "application/json",
      "StatusCode": 429
    }
  },
  "ClientRateLimitPolicies": {
    "IpRules": [
      {
        "Ip": "::1",
        "Rules": [
          {
            "Endpoint": "*",
            "Period": "4s",
            "Limit": 3
          }
        ]
      },
      {
        "Ip": "192.168.24.25",
        "Rules": [
          {
            "Endpoint": "*:/api/category",
            "Period": "55s",
            "Limit": 21
          },
          {
            "Endpoint": "Get:/api/category",
            "Period": "21h",
            "Limit": 100000
          }
        ]
      }
    ]
  },
  "ConnectionStrings": {
    "DefaultConnection": "Data Source=ISTTURNB172\\SQLEXPRESS;Initial Catalog=Northwind;Integrated Security=True"
  },
  "TokenOptions": {
    "Audience": "www.ibrahimozen.com",
    "Issuer": "www.ibrahimozen.com",
    "AccessTokenExpiration": 30,
    "SecurityKey": "CoreBackendSecurityKey"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*"
}
